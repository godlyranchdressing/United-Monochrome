// Decorations
UnityDecoration {
  -UnityDecoration-extents: 28px 1 1 1;
  -UnityDecoration-input-extents: 10px;
  -UnityDecoration-shadow-offset-x: 0px;
  -UnityDecoration-shadow-offset-y: 3px;
  -UnityDecoration-active-shadow-color: rgba(0, 0, 0, 0.2);
  -UnityDecoration-active-shadow-radius: 12px;
  -UnityDecoration-inactive-shadow-color: rgba(0, 0, 0, 0.07);
  -UnityDecoration-inactive-shadow-radius: 7px;
  -UnityDecoration-glow-size: 10px;
  -UnityDecoration-glow-color: $primary_color;
  -UnityDecoration-title-indent: 10px;
  -UnityDecoration-title-fade: 35px;
  -UnityDecoration-title-alignment: 0.0;

  .top {
    border: 1px solid if($headerbar == "dark" or $variant == "dark", $dark_headerbar_bg, transparentize(black, 0.9));
    border-bottom-width: 0;
    border-radius: 4px 4px 0 0;
    padding: 1px 6px 0 6px;
    background-image: image(opacify($headerbar_bg_color, 1));
    color: $headerbar_fg_color;

    // The foreground color will be used to paint the text

    box-shadow: none;

    &:backdrop {
      border-bottom-width: 0;

      //background-image: image(opacify($headerbar_bg_backdrop, 1));
      color: transparentize($headerbar_fg_color, 0.3);
    }
  }

  .left, .right, .bottom,
  .left:backdrop, .right:backdrop, .bottom:backdrop {
    background-color: transparent;
    border: 1px solid if($variant == "dark", $dark_headerbar_bg, transparentize(black, 0.9));
  }
}

// Panel Style
UnityPanelWidget,
.unity-panel {
  background-image: image($headerbar_bg_color);
  color: $headerbar_fg_color;
  box-shadow: none;

  &:backdrop {
    color: lighten($headerbar_fg_color, 1%);
  }
}

.unity-panel.menubar.menuitem:hover,
.unity-panel.menubar .menuitem *:hover {
  border-radius: 0;
  color: $primary_color;
  border-bottom: 3px solid $primary_color;
}

// Unity Greeter
.lightdm.menu {
  background-image: none;
  background-color: $base_color;
  border-color: $border_color;
  border-radius: $standard_radius;
  padding: 1px;
  color: $fg_color;
}

.lightdm-combo .menu {
  background-color: lighten($headerbar_bg_color, 8);
  border-radius: $standard_radius;
  padding: 0px;
  color: $fg_color;
}

.lightdm.menu .menuitem *,
.lightdm.menu .menuitem.check:active,
.lightdm.menu .menuitem.radio:active {
  color: $fg_color;
}

.lightdm.menubar {
  color: $fg_color;
  background-image: none;
  background-color: $headerbar_bg_color;

  & > .menuitem {
    padding: 2px 6px;
  }
}

.lightdm-combo.combobox-entry .button,
.lightdm-combo .cell,
.lightdm-combo .button,
.lightdm-combo .entry,
.lightdm.button,
.lightdm.entry {
  background-image: none;
  background-color: $base_color;
  border-color: $border_color;
  border-radius: 6px;
  padding: 6px;
  color: $fg_color;
  text-shadow: none;
}

.lightdm.button, .lightdm-combo.combobox-entry, .lightdm-combo .cell {
  @include button;

  &:hover, &:focus {
    @include button(hover);
  }

  &:active {
    @include button(active);
  }
}

.lightdm.entry, .lightdm-combo .entry {
  @include entry(normal);

  &:hover, &:active, &:active:focus, &:focus {
    @include entry(focus);
  }
}

.lightdm.entry:active {
  -gtk-icon-source: -gtk-icontheme("process-working-symbolic");
  animation: dashentry_spinner 1s infinite linear;
}

.lightdm.option-button {
  padding: 2px;
  background: none;
  border: 0;
}

.lightdm.toggle-button {
  background: none;
  border-width: 0;

  &.selected {
    background-color: transparentize(black, 0.3);
    border-width: 1px;
  }
}

@keyframes dashentry_spinner {
  to {
    -gtk-icon-transform: rotate(1turn);
  }
}

.unity-csd {
  // unround window corners in unity
  headerbar {
    &, &:not(.titlebar), &.titlebar {
      border-radius: 0px;
    }
  }
}
