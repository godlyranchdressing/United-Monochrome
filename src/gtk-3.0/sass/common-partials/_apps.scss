/************
 * Nautilus *
 ************/

window.nautilus-window {
  // get rid of separator gap
  grid.horizontal paned.horizontal > separator {
    background: transparent;
    margin: -5px;
  }

  placessidebar {
    // give the sunken sidebar effect like in the 18.04 design concept
    box-shadow: inset -10px 0 10px 0px rgba(0, 0, 0, 0.055);
  }

  paned box.floating-bar {
    // lower right box in the status bar isn't very eyecatching
    border: 1px solid $border_color;
    background-color: $lighter_bg_color;
  }

  header tabs tab {
    // regular tab dimensions aren't friendly enough
    min-height: $normal_size;
    padding: ($container_padding - 2) ($container_padding + 2);
  }

  notebook {
    header {
      // hide searchbar background and border from peeking out
      margin-bottom: -1px;
    }

    searchbar {
      background: $base_color;
    }
  }
}

.nautilus-desktop-window {
  // get rid of white line on the desktop if panel transparency is on
  .searchbar-container searchbar {
    background: transparent;
  }

  .nautilus-desktop.view {
    // give desktop icons white text instead of the variant dependant fg color
    color: $highlighted_fg_color;
    text-shadow: 0 -2px 1px $border_color;
  }
}

/************
 * GNOME Tweak Tool *
 ************/

.tweak-categories separator {
  // hide the separator between items to make the sidebar flatter
  background: transparent;
}

viewport.frame list.tweak-categories {
  border: none;
  background-image: image($alt_bg_color);

  row {
    padding: if($compact == true, $container_padding / 4, $container_padding / 2);
  }
}

.tweak-group-startup row {
  margin-left: -12px;
  margin-right: -12px;
  padding-left: 24px;
  padding-right: 24px;

  &:hover {
    background-image: image($lighter_bg_color);
  }
}

#DarkThemeSwitcher label:last-child {
  // give the caption the appearance of secondary text
  color: $secondary_fg_color;
}

#ShellExtensionTweakGroup button {
  // style the suggested actions them as destructive buttons
  &.text-button {
    &.suggested-action {
      @include button(normal, $destructive_color, white);

      &:hover {
        @include button(hover, $destructive_color, white);
      }

      &:active {
        @include button(active, $destructive_color, white);
      }

      &:disabled {
        @include button(disabled, $destructive_color);
      }
    }
  }
}

list#AutostartListBoxTweakGroup.tweak-group-startup row.activatable.tweak-startup {
  // has a light background that it's stubbornly inheriting from someplace that the inspector is refusing to give up
  // so here's a background image to stop it
  background-image: image($bg_color);
}

/************
 * Calculator *
 ************/

headerbar.titlebar button.title {
  // the calculator's title is a button
  @include button(normal, $in_headerbar: true);

  @if $headerbar == "dark" {
    label, widget {
      color: $headerbar_fg_color;
    }
  }

  &:hover {
    @include button(hover, $lighter_bg_color, $primary_color);
  }

  &:active {
    @include button(active, $lighter_bg_color, $primary_color);
  }

  &:checked {
    @include button(checked, $lighter_bg_color, $primary_color);
  }
}

@if $headerbar == "dark" {
  grid.math-buttons {
    background-color: $base_color;
  }
}

/************
 * Rhythmbox *
 ************/

#AltToolbarSideBar {
  background-color: $alt_bg_color;
  box-shadow: none;

  &:selected {
    background-color: $primary_color;
  }
}

toolbar.sidebar-toolbar toolitem button {
  border-right-style: none;
  border-radius: 0;

  &:first-child {
    border-radius: $standard_radius 0 0 $standard_radius;
  }

  &:last-child {
    border-right-style: solid;
    border-radius: 0 $standard_radius $standard_radius 0;
  }
}

/************
 * GNOME Software *
 ************/

headerbar buttonbox.horizontal.linked button.toggle.toolbar-primary-buttons-software {
  // software uses a stackswitcher that isn't tagged as such
  border-radius: 0px;
  border-width: 0px;

  &:first-child {
    border-top-left-radius: $standard_radius;
  }

  &:last-child {
    border-top-right-radius: $standard_radius;
  }

  @include button(toggle, $lighter_bg_color, $primary_color, $in_headerbar: true);

  &:hover {
    @include button(toggle-hover, $lighter_bg_color, $primary_color, $in_headerbar: true);
  }

  &:checked, &:active {
    @include button(toggle-active, $lighter_bg_color, $primary_color, $in_headerbar: true);

    &:disabled {
      @include button(disabled, $in_headerbar: true);

      box-shadow: $shadow_bottom if($headerbar == "dark", $dark_secondary_fg_color, $secondary_fg_color);
    }
  }
}

/************
 * GNOME Builder *
 ************/

window.workbench {
  // uses various elements that are identical to regular gtk3 widgets
  // i'd really like to know why

  omnibar {
    button {
      margin-top: 6px;
      margin-bottom: 6px;

      @include button(normal);

      &:hover {
        @include button(hover);
      }

      &:active, &:checked {
        @include button(active);
      }

      &:disabled {
        @include button(disabled);
      }
    }
  }

  docktabstrip {
    // analogous to notebook header
    border-color: $border_color;
    margin-top: $container_padding;
    background-color: transparent;
    box-shadow: _shadow_border(0, 0, 1, 0);

    docktab {
      // analogous to notebook tabs
      border-radius: $standard_radius $standard_radius 0 0;
      box-shadow: _shadow_border(1, 1, 0, 1), _shadow_border(1, 1, 0, 1);
      border-color: $border_color;
      color: $secondary_fg_color;
      transition: $shorter_transition;
      min-height: $normal_size;
      min-width: 48px;
      padding: ($container_padding - 2) ($container_padding + 2);
      margin: 0 $container_padding;
      outline-offset: -6px;
      border-width: 0;
      font-weight: 500;

      &:checked, &:hover {
        background-color: $lighter_bg_color;

        label {
          color: $fg_color;
        }
      }
    }
  }

  layouttabbar {
    box-shadow: inset 0 -1px $border_color;
  }

  layouttab, layouttabbar {
    button {
      &, &.popup.toggle {
        border-width: 0px;

        @include button(flat);

        &:hover {
          @include button(flat-hover, $primary_color);
        }

        &:active, &:checked {
          @include button(flat-active, $primary_color);
        }
      }
    }
  }

  popover {
    .popover-content-area {
      padding: $container_padding;
    }

    .popover-action-area button {
      border-bottom-style: none;
      box-shadow: none;

      &:not(:last-child) {
        border-left-width: 0px;
      }

      &:last-child {
        border-right-width: 0px;
      }
    }

    list row {
      label {
        padding: 0 $container_padding;
      }

      min-height: 16px;
    }

    button.model {
      @include button(normal);

      &:hover {
        @include button(hover, $primary_color);

        border-color: $border_color;
      }

      &:active {
        @include button(active, $primary_color);
      }

      &:checked {
        @include button(checked, $primary_color);

        &:hover {
          &, > * {
            color: white;
          }
        }
      }
    }
  }

  box.popover-action-area .text-button {
    border-radius: 0px;

    &:hover {
      border-color: $border_color;
      background-color: $primary_color;
      color: white;
    }

    &:active {
      border-color: $border_color;
      background-color: _pressed_shade($primary_color);
      color: white;
    }

    &:not(:first-child):not(:last-child) {
      border-width: 1px 0 1px 0;
    }
  }

  greeter frame, layout > stack {
    border: 1px solid $border_color;
  }
}

/************
 * GNOME Maps *
 ************/

#zoom-in-button, #zoom-out-button {
  // to hide the seemingly persistant background color behind them
  border-radius: 0px;
}

/************
 * GNOME Weather *
 ************/

#weather-page-content-view stackswitcher {
  // solid black background
  border-radius: 6px;
}

/************
 * Evolution *
 ************/

#main-toolbar {
  //-gtk-icon-style: symbolic;
  #mail-archive image {
    margin: -12px 0;
  }
}

button.ecalendar.flat {
  @include button(flat);

  &:hover {
    @include button(flat-hover, $primary_color);
  }

  &:active, &:checked {
    @include button(flat-active, $primary_color);
  }
}

box.sidebar > label {
  // analogous to lists
  padding: $container_padding;

  &.highlight {
    @extend %selected_items;
  }
}

// buttonbox.vertical > button {
//   // analogous to lists
//   padding: $container_padding;
//   border-radius: 0px;
//   transition: all 150ms $ease-out-quad;
//
//   &:hover {
//     background-color: if(variant == light, transparentize($fg_color, 0.9), transparentize($fg_color, 0.95));
//   }
//
//   &:active {
//     background-color: if(variant == light, transparentize($fg_color, 0.88), transparentize($fg_color, 0.92));
//   }
//
//   &:checked {
//     @extend %selected_items;
//
//     &:hover {
//       color: $highlighted_fg_color;
//       background-color: _pressed_shade($primary_color);
//     }
//   }
// }

// box.vertical box.vertical:not(.horizontal) infobar.horizontal.info box.horizontal buttonbox.horizontal:last-child button.toggle:last-child:not(.text-button) {
// final boss music plays
// toggle button loses its right border when toggled but it seems impossible to override
//   &, &:checked {
//     background-color: red;
//     border: 1px solid $border_color;
//     border-right-style: solid;
//     border-right-width: 1px;
//     border-radius: 0 $standard_radius $standard_radius 0;
//   }
// }

/************
 * GNOME Web *
 ************/

#PagePopup separator {
  // inherits black from somewhere in the darker variant
  background-image: image($border_color);
  background-color: $border_color;
}

headerbar.titlebar.incognito-mode {
  button {
    @include button(flat);
  }
}

/************
 * GNOME Terminal *
 ************/
terminal-window {
  // make it resemble unity 8's
  .terminal-screen {
    background: $terminal_bg;
    color: $terminal_fg;
  }

  notebook.terminal-notebook {
    header {
      background: $terminal_bg;
      border-bottom: 2px solid $terminal_border_color;
      color: $terminal_fg;
    }

    button {
      color: transparentize($light_fg_color, $secondary_opacity);
      padding: 4px;
    }

    tab.reorderable-page {
      background-color: transparent;
      padding: 4px 12px;
      color: #fff;

      &:checked, &:hover {
        background: $terminal_selected_bg;

        label {
          color: #fff;
        }

        button.flat {
          color: transparentize($light_fg_color, $secondary_opacity);

          &:hover, &:active {
            color: white;
          }
        }
      }
    }
  }

  scrollbar {
    background-color: transparent;

    slider {
      transition: $shorter_transition;
      min-width: 8px;
      min-height: 8px;
      border: 4px solid transparent;
      border-radius: $circular_radius;
      background-clip: padding-box;
      background-color: transparentize($light_fg_color, $secondary_opacity);

      &:hover {
        background-color: $light_fg_color;
      }

      &:active {
        background-color: $fg_color;
      }

      &:disabled {
        background-color: $disabled_secondary_fg_color;
      }
    }

    &.dragging,
    &:hover {
      background-color: $border_color;
    }

    &:hover slider {
      background-color: transparentize($light_fg_color, $middle_opacity);
    }

    &.dragging slider {
      background-color: transparentize($light_fg_color, $disabled_opacity);
    }
  }
}

/************
 * Polari *
 ************/

headerbar button.polari-user-list-button {
  @include button(flat);
}

stack.polari-entry-area button.polari-nick-button {
  &:hover {
    @include button(hover, $primary_color);

    label {
      color: white;
    }
  }

  &:active, &:checked {
    @include button(active, $primary_color, white);

    label {
      color: white;
    }
  }
}

/************
 * Libreoffice *
 ************/
window > decoration ~ grid widget ~ grid {
  background: $headerbar_bg_color;

  menubar ~ button.flat.small-button {
    color: $headerbar_fg_color;
    border-style: none;
    border-radius: 0px;

    &:hover, &:active {
      background-color: transparent;
      background-image: image($headerbar_bg_color);
    }

    &:hover {
      color: _hover_shade($destructive_color);
    }

    &:active {
      color: _pressed_shade($destructive_color);
    }
  }
}
